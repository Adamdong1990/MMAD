th = c(0.2, 0.3) #rep(0.3,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.1
phi = rep(0.1,m)
la = rep(1,m)
th = rep(0.1,m)
result <- CZIGPMM(data = y, phi0, phi, la, th)
summary(result)
rm(list=ls())
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 600
m = 2
phi0 = 0.1
phi = c(0.2, 0.5)#rep(0.2,m)
la = c(2, 7) #rep(2,m)
th = c(0.2, 0.3) #rep(0.3,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.1
phi = rep(0.1,m)
la = rep(1,m)
th = rep(0.1,m)
result <- CZIGPMM(data = y, phi0, phi, la, th)
summary(result)
library(devtools)
load_all()
document()
document()
docum
docum
document()
document()
library(devtools)
load_all()
document()
file.rename("CZIGPmm.R", "R/CZIGPMM.R")
file.rename("R/CZIGPmm.R", "R/CZIGPMM.R")
file.rename("R/ZIGPmm.R", "R/ZIGPMM.R")
file.rename("R/summary.cox.R", "R/summary.Cox.R")
file.rename("R/plot.ic2.R", "R/plot.IC2.R")
file.rename("R/plot.cox.R", "R/plot.Cox.R")
file.rename("R/LTNmm.R", "R/LTNMM.R")
document()
document()
document()
document()
library(devtools)
load_all()
document()
document()
document()
document()
CoxMM(Surv(time, status) ~ age + sex, data = lung)
document()
document()
document()
document()
document()
document()
document()
library(devtools)
load_all()
usethis::use_r("DataDesc.R")
document()
document()
# 5.1 cadi
y1 <- c( rep(0, 323), rep(1, 10), rep(1, 8), rep(2, 22), rep(2, 9), rep(3, 19), rep(3, 1), rep(3, 3), rep(3, 6), rep(4, 3), rep(4, 3), rep(4, 3), rep(5, 1), rep(6, 1), rep(6, 1), rep(7, 12), rep(7, 1), rep(7, 2), rep(7, 5), rep(10, 2), rep(14, 1), rep(15, 1)	)
y2 <- c( rep(0, 323), rep(0, 10), rep(1, 8), rep(0, 22), rep(2, 9), rep(0, 19), rep(1, 1), rep(2, 3), rep(3, 6), rep(0, 3), rep(1, 3), rep(2, 3), rep(5, 1), rep(3, 1), rep(6, 1), rep(0, 12), rep(2, 1), rep(3, 2), rep(7, 5), rep(0, 2),  rep(7, 1),  rep(3, 1)	)
data <- data.frame(x1 = y1, x2 = y2)
colnames(data) <- c("y1", "y2")
save(data, file = "cadi.rda")
# 5.2 vijc
y1 <- c( rep(0, 1227), rep(1, 150), rep(0, 319), rep(0, 109), rep(0, 27), rep(0, 20), rep(0, 5), rep(0, 1), rep(0, 2), rep(0, 1), rep(0, 2),  rep(1, 83), rep(1, 23), rep(1, 10), rep(1, 1), rep(1, 3), rep(1, 2), rep(1, 1), rep(1, 1), rep(2, 34),  rep(2, 16),  rep(2, 6),  rep(2, 6),  rep(2, 2),  rep(2, 2),  rep(2, 1),  rep(2, 1),  rep(2, 1),   rep(3, 20),  rep(3, 5),  rep(3, 1),  rep(3, 2),  rep(4, 8),  rep(4, 2),  rep(4, 2),  rep(4, 1),  rep(5, 6),   rep(5, 2),  rep(6, 2),  rep(6, 1),  rep(7, 2),  rep(8, 3),  rep(9, 3),  rep(10, 7),  rep(15, 1) )
y2 <- c( rep(0, 1227), rep(0, 150), rep(1, 319), rep(2, 109), rep(3, 27), rep(4, 20), rep(5, 5), rep(6, 1), rep(7, 2), rep(8, 1), rep(10, 2), rep(1, 83), rep(2, 23), rep(3, 10), rep(4, 1), rep(5, 3), rep(6, 2), rep(7, 1), rep(9, 1), rep(0, 34),  rep(1, 16),  rep(2, 6),  rep(3, 6),  rep(4, 2),  rep(5, 2),  rep(6, 1),  rep(7, 1),  rep(12, 1),  rep(0, 20),  rep(1, 5),  rep(2, 1),  rep(4, 2),  rep(0, 8),  rep(1, 2),  rep(3, 2),  rep(10, 1),  rep(0, 6),  rep(1, 2),  rep(0, 2),  rep(9, 1),  rep(0, 2),  rep(0, 3),  rep(0, 3),  rep(0, 7),  rep(0, 1)	)
data <- data.frame(x1 = y1, x2 = y2)
colnames(data) <- c("y1", "y2")
save(data, file = "vijc.rda")
document()
document()
library(MMAD)
ls("package:MMAD")
load_all()
# 5.2 vijc
y1 <- c( rep(0, 1227), rep(1, 150), rep(0, 319), rep(0, 109), rep(0, 27), rep(0, 20), rep(0, 5), rep(0, 1), rep(0, 2), rep(0, 1), rep(0, 2),  rep(1, 83), rep(1, 23), rep(1, 10), rep(1, 1), rep(1, 3), rep(1, 2), rep(1, 1), rep(1, 1), rep(2, 34),  rep(2, 16),  rep(2, 6),  rep(2, 6),  rep(2, 2),  rep(2, 2),  rep(2, 1),  rep(2, 1),  rep(2, 1),   rep(3, 20),  rep(3, 5),  rep(3, 1),  rep(3, 2),  rep(4, 8),  rep(4, 2),  rep(4, 2),  rep(4, 1),  rep(5, 6),   rep(5, 2),  rep(6, 2),  rep(6, 1),  rep(7, 2),  rep(8, 3),  rep(9, 3),  rep(10, 7),  rep(15, 1) )
y2 <- c( rep(0, 1227), rep(0, 150), rep(1, 319), rep(2, 109), rep(3, 27), rep(4, 20), rep(5, 5), rep(6, 1), rep(7, 2), rep(8, 1), rep(10, 2), rep(1, 83), rep(2, 23), rep(3, 10), rep(4, 1), rep(5, 3), rep(6, 2), rep(7, 1), rep(9, 1), rep(0, 34),  rep(1, 16),  rep(2, 6),  rep(3, 6),  rep(4, 2),  rep(5, 2),  rep(6, 1),  rep(7, 1),  rep(12, 1),  rep(0, 20),  rep(1, 5),  rep(2, 1),  rep(4, 2),  rep(0, 8),  rep(1, 2),  rep(3, 2),  rep(10, 1),  rep(0, 6),  rep(1, 2),  rep(0, 2),  rep(9, 1),  rep(0, 2),  rep(0, 3),  rep(0, 3),  rep(0, 7),  rep(0, 1)	)
vijc <- data.frame(x1 = y1, x2 = y2)
colnames(vijc) <- c("y1", "y2")
save(vijc, file = "vijc.rda")
# 5.1 cadi
y1 <- c( rep(0, 323), rep(1, 10), rep(1, 8), rep(2, 22), rep(2, 9), rep(3, 19), rep(3, 1), rep(3, 3), rep(3, 6), rep(4, 3), rep(4, 3), rep(4, 3), rep(5, 1), rep(6, 1), rep(6, 1), rep(7, 12), rep(7, 1), rep(7, 2), rep(7, 5), rep(10, 2), rep(14, 1), rep(15, 1)	)
y2 <- c( rep(0, 323), rep(0, 10), rep(1, 8), rep(0, 22), rep(2, 9), rep(0, 19), rep(1, 1), rep(2, 3), rep(3, 6), rep(0, 3), rep(1, 3), rep(2, 3), rep(5, 1), rep(3, 1), rep(6, 1), rep(0, 12), rep(2, 1), rep(3, 2), rep(7, 5), rep(0, 2),  rep(7, 1),  rep(3, 1)	)
cadi <- data.frame(x1 = y1, x2 = y2)
colnames(cadi) <- c("y1", "y2")
save(cadi, file = "cadi.rda")
document()
document()
library(MMAD)
ls("package:MMAD")
document()
load_all()
library(devtools)
load_all()
check()
check()
check()
devtools::build_manual(path = "C:\mypkg\MMAD.pdf")
devtools::build_manual(path = "C:/mypkg/MMAD.pdf")
devtools::build_manual()
library(MMAD)
library(devtools)
load_all()
result = GaFrailtyMM(Surv(time, status) ~ age + sex + cluster(id), data=kidney)
result = IC2MM(Surv(L,R, type = "interval2") ~ 1, data, control=IC2Control(Pdigits=3))
result = IC2MM(Surv(left, right, type = "interval2") ~ treatment, bcos, IC2Control(Pdigits=3))
summary(result)
result = GaFrailtyMM(Surv(time, status) ~ age + sex + cluster(id), data=kidney)
rm(list=ls())
sam=function(n,be,th,la){
q=length(be)
x=matrix(rnorm(n*q,-1,1),n,q)
u=runif(n)
t=-log(u)/(la*exp(x%*%be))
cen=3.7
I=1*(t<=cen)
t=pmin(t,cen)
return(list(x=x,I=I,t=t))
}
n=200;q=3
be.true=matrix(c(-0.5,1,2),ncol=1)
t.true=c(0.1,0.5)
LA.TRUE=2*t.true
be.in=be.true*0.5
da=sam(n,be=be.true,la=2)
data=da$x;time=da$t;status=da$I;be=be.in;bootstrap = TRUE
X1=data[,1];X2=data[,2];X3=data[,3]
data = data.frame(X1,X2,X3,time=time,status)
result = CoxMM(Surv(time, status)~X1+X2+X3, data, beat=be)
summary(result)
result
summary(result)
plot(result)
0.057937540*0.0032
rm(list=ls())
ZIGP_sample <- function(phi0,phi,la,th,n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Z <- sample(c(0,1),n,c(phi[j],1-phi[j]),replace=TRUE)
Y[,j]<- X*Z
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 600
m = 2
phi0 = 0.1
phi = c(0.2, 0.5)#rep(0.2,m)
la = c(2, 7) #rep(2,m)
th = c(0.2, 0.3) #rep(0.3,m)
y = ZIGP_sample(phi0, phi,la,th,n)
phi0 = 0.1
phi = rep(0.1,m)
la = rep(1,m)
th = rep(0.1,m)
result <- CZIGPMM(y, phi0, phi, la, th)
summary(result)
y1 <- c( rep(0, 2789), rep(1, 224), rep(0, 726), rep(0, 307), rep(0, 171), rep(0, 76), rep(0, 32), rep(0, 16), rep(0, 15), rep(0, 9), rep(1, 212), rep(1, 149), rep(1, 85), rep(1,50), rep(1, 35), rep(1, 13), rep(1, 5), rep(1, 9), rep(2, 49),  rep(2, 34),  rep(2, 38),  rep(2, 11),  rep(2, 23),  rep(2, 7),  rep(2, 5),  rep(2, 3),  rep(2, 4),   rep(3, 8),  rep(3, 10),  rep(3, 6),  rep(3, 2), rep(3, 1), rep(3, 1),rep(3, 2), rep(4, 8),  rep(4, 8),  rep(4, 2),  rep(4, 2), rep(4, 3),  rep(4, 1),  rep(5, 3),   rep(5, 3), rep(5, 2), rep(5, 1), rep(6, 2),  rep(6, 1), rep(6, 3),rep(6, 1),rep(6, 2),rep(6, 2),rep(6, 1), rep(7, 1), rep(7, 3),rep(7, 2),rep(7, 1),rep(7, 2),rep(7, 1),rep(7, 2), rep(8, 1), rep(8, 1),rep(8, 1),rep(8, 1),rep(8, 1), rep(9, 1) )
y2 <- c( rep(0, 2789), rep(0, 224), rep(1, 726), rep(2, 307), rep(3, 171), rep(4, 76), rep(5, 32), rep(6, 16), rep(7, 15), rep(8, 9), rep(1, 212), rep(2, 149), rep(3, 85), rep(4,50), rep(5, 35), rep(6, 13), rep(7, 5), rep(8, 9), rep(0, 49),  rep(1, 34),  rep(2, 38),  rep(3, 11),  rep(4, 23),  rep(5, 7),  rep(6, 5),  rep(7, 3),  rep(8, 4),  rep(0, 8),  rep(1, 10),  rep(2, 6),   rep(3, 2), rep(4, 1), rep(5, 1),rep(6, 2), rep(0, 8),  rep(1, 8),  rep(2, 2),  rep(3, 2), rep(4, 3),  rep(5, 1),  rep(0, 3),   rep(1, 3), rep(2, 2), rep(4, 1), rep(0, 2),  rep(2, 1), rep(3, 3),rep(4, 1),rep(5, 2),rep(6, 2),rep(8, 1), rep(0, 1), rep(2, 3),rep(3, 2),rep(4, 1),rep(5, 2),rep(6, 1),rep(8, 2), rep(0, 1), rep(1, 1),rep(2, 1),rep(4, 1),rep(6, 1), rep(8, 1) )
yy = data.frame(y1,y2)
phi0 = 0.5
phi = rep(0.5,2)
la = rep(5,2)
th = rep(0.5,2)
result <- CZIGPMM(data=yy, phi0, phi, la, th)
summary(result)
result <- CZIGPMM(data=vijc, phi0, phi, la, th)
summary(result)
result = GaFrailtyMM(Surv(time, status) ~ age + sex + cluster(id), data=kidney)
library(survival)
result = GaFrailtyMM(Surv(time, status) ~ age + sex + cluster(id), data=kidney)
summary(result)
plot(result)
sample <- function(la,n)
{
u = runif(n,0,1)
w = runif(n,0,1)
U = -log(u)/la
W = -log(w)/la
L = pmin(U,W)
R = pmax(U,W)
return(list(L=L,R=R))
}
n = 10
y=sample(0.5,n)
L = y$L
R = y$R
data =data.frame(L,R)
result = IC2MM(Surv(L,R, type = "interval2") ~ 1, data, control=IC2Control(Pdigits=3))
summary(result)
plot(result)
result = IC2MM(Surv(left, right, type = "interval2") ~ treatment, bcos, IC2Control(Pdigits=3))
summary(result)
plot(result, COL=c("red", "blue"))
plot(result, COL=c("red", "blue"))
LTN_sample <- function(a, mu, si2, n)
{
x <- rep(0,n)
for (i in 1:n)
{
repeat {
z <- rnorm(1,mu,sqrt(si2))
if(z >= a)
{break} }
x[i] <- z
}
return(x)
}
a = 5; n = 1000; mu = 7; si2 = 4
y = LTN_sample(a, mu, si2, n)
result <- LTNMM(y~1, a=5)
summary(result)
ZIGP_sample <- function(phi0, la, th, n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Y[,j]<- X
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 600
m = 2
phi0 = 0.4
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, la,th,n)
rm(list=ls())
ZIGP_sample <- function(phi0, la, th, n)
{
GP <- function(x, la0, th0)
{
b<-gamma(x+1)
if(th0 <1 && th0>=0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
if(th0<0 && th0 >-1 &&  la0+th0*x <=0){
p<-0 }
if(th0<0 && th0>-1 && la0+th0*x > 0) {
p<-exp(-la0-th0*x)*la0*(la0+th0*x)^(x-1)/b }
return(p)
}
m <- length(la)
Y <- matrix(0,n,m)
P <- matrix(0,100,m)
for(j in 1:m)
{
for(i in 0:99)
{   P[i+1,j] <- GP(i,la[j],th[j])     }
a<-0:99
X <- sample(a,n,P[,j],replace=TRUE)
Y[,j]<- X
}
z0 <- sample(c(0,1),n,c(phi0,1-phi0),replace=TRUE)
zz <- matrix(z0,n,m)
y <- zz*Y
return(y)
}
n = 600
m = 2
phi0 = 0.4
la = rep(9,m)
th = rep(0.7,m)
y = ZIGP_sample(phi0, la,th,n)
phi0 = 0.1
la = rep(1,m)
th = rep(0.1,m)
result <- ZIGPMM(y, phi0, la, th)
summary(result)
phi0 = 0.5
la = rep(5,2)
th = rep(0.5,2)
result <- ZIGPMM(vijc, phi0, la, th)
summary(result)
result <- ZIGPMM(cadi, phi0, la, th)
summary(result)
sam=function(n,be,th,la){
q=length(be)
x=matrix(rnorm(n*q,-1,1),n,q)
u=runif(n)
t=-log(u)/(la*exp(x%*%be))
cen=3.7
I=1*(t<=cen)
t=pmin(t,cen)
return(list(x=x,I=I,t=t))
}
n=200;q=3
be.true=matrix(c(-0.5,1,2),ncol=1)
t.true=c(0.1,0.5)
LA.TRUE=2*t.true
be.in=be.true*0.5
da=sam(n,be=be.true,la=2)
data=da$x;time=da$t;status=da$I;be=be.in
X1=data[,1];X2=data[,2];X3=data[,3]
data = data.frame(X1,X2,X3,time=time,status)
result = CoxMM(Surv(time, status)~X1+X2+X3, data, beat=be)
summary(result)
plot(result)
result = CoxMM(Surv(time, status) ~ age + sex, lung)
summary(result)
plot(result)
document()
library(styler)
library(formatR)
tidy_source("C:/mypkg/MMad/R")
library(formatR)
CoxMM()
CoxMM()
library(formatR)
CoxMM()
tidy_source("C:/mypkg/MMad/R/CoxMM.R", arrow = T)
install.packages("shiny")
install.packages("shiny")
library(devtools)
load_all()
document()
check()
document()
check()
document()
document()
check()
document()
result = CoxMM(Surv(time, status)~X1+X2+X3, data, beat=be)
summary(result)
plot(result)
document()
check()
document()
check()
document()
document()
document()
document()
document()
check()
document()
check()
library(shiny)
library(formatR)
tidy_app()
document()
check()
devtools::build_manual()
data = data(cadi)
data
data = data("cadi")
data
data("cadi")
data("cgd")
cadi
data("cadi")
data = cadi
data
document()
result <- CZIGPMM(data = vijc, phi0, phi, la, th)
result <- GaFrailtyMM(Surv(time, status) ~ age + sex + cluster(id), data = kidney)
library(survival)
result <- GaFrailtyMM(Surv(time, status) ~ age + sex + cluster(id), data = kidney)
summary(result)
devtools::build()
document()
result <- CoxMM(Surv(time, status) ~ age + sex, lung)
summary(result)
plot(result)
result <- IC2MM(Surv(left, right, type = "interval2") ~ treatment, bcos,
IC2Control(Pdigits = 3))
summary(result)
plot(result, COL = c("red", "blue"))
plot(result, col = c("red", "blue"))
result <- IC2MM(Surv(left, right, type = "interval2") ~ treatment, bcos,
IC2Control(Pdigits = 3))
summary(result)
plot(result, col = c("red", "blue"))
result <- GaFrailtyMM(Surv(time, status) ~ age + sex + cluster(id), data = kidney)
summary(result)
plot(result)
document()
devtools::build()
check()
document()
check()
devtools::build()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
sample <- function(la, n) {
u <- runif(n, 0, 1)
w <- runif(n, 0, 1)
U <- -log(u)/la
W <- -log(w)/la
L <- pmin(U, W)
R <- pmax(U, W)
return(list(L = L, R = R))
}
n <- 10
y <- sample(0.5, n)
L <- y$L
R <- y$R
data <- data.frame(L, R)
result <- IC2MM(Surv(L, R, type = "interval2") ~ 1, data, control = IC2Control(Pdigits = 3))
summary(result)
plot(result)
result
L <- c(1.4, 1.5, 1.3, 0.9, 0.4, 0.2, 0.5, 0.03, 1.7, 0.2)
R <- c(2.2, 3, 2.4, 1.2, 2.8, 0.3, 1.6, 2.5, 2.6, 3.4)
IC2Pro(L, R, control=IC2Control())
document()
document()
document()
document()
document()
document()
devtools::build_manual()
document()
devtools::build_manual()
document()
document()
document()
document()
document()
document()
devtools::build_manual()
devtools::build()
check()
library(shiny)
library(formatR)
tidy_source("C:/Users/Administrator/Desktop/编辑文献/公式0527/程序调试/gamma/Gamma_frailty.r", arrow = T)
