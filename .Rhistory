document()
summary.cox(result)
document()
t.true=c(0.1,0.5)
summary.cox(result)
document()
summary.cox(result)
result = coxmm(data, time, status, be, convergence=1e-8, b=2000, method = "Pro")
summary.cox(result)
library(devtools)
load_all()
rm(list=ls())
sam=function(n,be,th,la){
q=length(be)
x=matrix(rnorm(n*q,-1,1),n,q)
u=runif(n)
t=-log(u)/(la*exp(x%*%be))
#t=(exp(-log(u)/exp(x%*%be))-1)/la
cen=3.7
I=1*(t<=cen)
t=pmin(t,cen)
return(list(x=x,I=I,t=t))
}
n=50;q=3
be.true=matrix(c(-0.5,1,2),ncol=1)
t.true=c(0.1,0.5)
LA.TRUE=2*t.true
be.in=be.true*0.5
da=sam(n,be=be.true,la=2)
data=da$x;time=da$t;status=da$I;be=be.in;bootstrap = TRUE
result = coxmm(data, time, status, be, convergence=1e-8, b=2000, method = "Pro")
summary.cox(result)
document()
result = coxmm(data, time, status, be, convergence=1e-8, b=50, method = "NPro")
summary.cox(result)
coef=2.2243
ci <- apply(coef, 2, function(x) {
x <- sort(x)
ci.lower <- ifelse(round(length(x) * .025) < 1, x[1], x[round(length(x) * .025)])
ci.upper <- ifelse(round(length(x) * .975) > length(x), x[length(x)],
x[round(length(x) * .975)]
)
return(list(ci.low = ci.lower, ci.up = ci.upper))
})
rm(list=ls())
ci <- apply(coef, 2, function(x) {
x <- sort(x)
ci.lower <- ifelse(round(length(x) * .025) < 1, x[1], x[round(length(x) * .025)])
ci.upper <- ifelse(round(length(x) * .975) > length(x), x[length(x)],
x[round(length(x) * .975)]
)
return(list(ci.low = ci.lower, ci.up = ci.upper))
})
document()
ci <- apply(coef, 2, function(x) {
x <- sort(x)
ci.lower <- ifelse(round(length(x) * .025) < 1, x[1], x[round(length(x) * .025)])
ci.upper <- ifelse(round(length(x) * .975) > length(x), x[length(x)],
x[round(length(x) * .975)]
)
return(list(ci.low = ci.lower, ci.up = ci.upper))
})
rm(list=ls())
sam=function(n,be,th,la){
q=length(be)
x=matrix(rnorm(n*q,-1,1),n,q)
u=runif(n)
t=-log(u)/(la*exp(x%*%be))
#t=(exp(-log(u)/exp(x%*%be))-1)/la
cen=3.7
I=1*(t<=cen)
t=pmin(t,cen)
return(list(x=x,I=I,t=t))
}
n=50;q=3
be.true=matrix(c(-0.5,1,2),ncol=1)
t.true=c(0.1,0.5)
LA.TRUE=2*t.true
be.in=be.true*0.5
da=sam(n,be=be.true,la=2)
data=da$x;time=da$t;status=da$I;be=be.in;bootstrap = TRUE
be
std.est <- function(data, time, status, be, Maxiter, convergence, bootstrap, b, method )
{
coef <- NULL
for (i in 1:b) {
boot_rows <- sample(nrow(data), nrow(data), replace = TRUE)
boot_data <- data[boot_rows, ]
capture.output(cox <- coxmm(
data=boot_data, time=time, status=status, be=be, Maxiter = Maxiter,
convergence = convergence, bootstrap = FALSE, b = b, method = method))
coef <- rbind(coef, cox$be)
}
se.boot <- apply(coef, 2, function(x) {
sqrt( sum((x - mean(x))^2)/(b-1) )
})
# bootstrap replications are non-normally distributed
ci <- apply(coef, 2, function(x) {
x <- sort(x)
ci.lower <- ifelse(round(length(x) * .025) < 1, x[1], x[round(length(x) * .025)])
ci.upper <- ifelse(round(length(x) * .975) > length(x), x[length(x)],
x[round(length(x) * .975)]
)
return(list(ci.low = ci.lower, ci.up = ci.upper))
})
ci.final <- NULL
for (i in 1:length(ci)) {
ci.final <- rbind(ci.final, c(ci[[i]]$ci.low, ci[[i]]$ci.up))
}
est <- list(se = se.boot, ci = ci.final)
return(est)
}
o.data <- data
o.time <- time
o.status <- status
o.be <- be
se <- ci <- NULL
std.est(
data = o.data,
time = o.time,
status = o.status,
be = o.be,
Maxiter = Maxiter,
convergence = convergence,
bootstrap = bootstrap,
b = b,
method = method
)
b=100
std.est(
data = o.data,
time = o.time,
status = o.status,
be = o.be,
Maxiter = Maxiter,
convergence = convergence,
bootstrap = bootstrap,
b = b,
method = method
)
Maxiter = 500
convergence = 1e-06
method = "Pro"
std.est(
data = o.data,
time = o.time,
status = o.status,
be = o.be,
Maxiter = Maxiter,
convergence = convergence,
bootstrap = bootstrap,
b = b,
method = method
)
coef <- NULL
nrow(data)
nrow(data)
sample(nrow(data), nrow(data), replace = TRUE)
data[boot_rows, ]
boot_rows <- sample(nrow(data), nrow(data), replace = TRUE)
data[boot_rows, ]
data
for (i in 1:b) {
boot_rows <- sample(nrow(data), nrow(data), replace = TRUE)
boot_data <- data[boot_rows, ]
capture.output(cox <- coxmm(
data=boot_data, time=time, status=status, be=be, Maxiter = Maxiter,
convergence = convergence, bootstrap = FALSE, b = b, method = method))
coef <- rbind(coef, cox$be)
}
coef
data[boot_rows, ]
data
data[boot_rows, boot_rows]
data[, boot_rows]
data[boot_rows, ]
be
LENGTH(be)
length(be)
coef
boot_data
coxmm(
data=boot_data, time=time, status=status, be=be, Maxiter = Maxiter,
convergence = convergence, bootstrap = FALSE, b = b, method = method)
data=da$x;time=da$t;status=da$I;be=be.in;bootstrap = TRUE
coxmm(data, time, status, be, convergence=1e-8, b=50, method = "NPro")
data[boot_rows, 1]
sample(nrow(data), nrow(data), replace = TRUE)
sample(nrow(data), nrow(data), replace = TRUE)
rm(list=ls())
sam=function(n,be,th,la){
q=length(be)
x=matrix(rnorm(n*q,-1,1),n,q)
u=runif(n)
t=-log(u)/(la*exp(x%*%be))
#t=(exp(-log(u)/exp(x%*%be))-1)/la
cen=3.7
I=1*(t<=cen)
t=pmin(t,cen)
return(list(x=x,I=I,t=t))
}
n=500;q=3
be.true=matrix(c(-0.5,1,2),ncol=1)
t.true=c(0.1,0.5)
LA.TRUE=2*t.true
be.in=be.true*0.5
da=sam(n,be=be.true,la=2)
data=da$x;time=da$t;status=da$I;be=be.in;bootstrap = TRUE
result = coxmm(data, time, status, be, convergence=1e-8, b=100, method = "NPro")
summary.cox(result)
o.data
data
sample(nrow(data), nrow(data), replace = TRUE)
boot_rows <- sample(nrow(data), nrow(data), replace = TRUE)
data[boot_rows, ]
boot_data <- data[boot_rows, ]
document()
document()
rm(list=ls())
sam=function(n,be,th,la){
q=length(be)
x=matrix(rnorm(n*q,-1,1),n,q)
u=runif(n)
t=-log(u)/(la*exp(x%*%be))
#t=(exp(-log(u)/exp(x%*%be))-1)/la
cen=3.7
I=1*(t<=cen)
t=pmin(t,cen)
return(list(x=x,I=I,t=t))
}
n=500;q=3
be.true=matrix(c(-0.5,1,2),ncol=1)
t.true=c(0.1,0.5)
LA.TRUE=2*t.true
be.in=be.true*0.5
da=sam(n,be=be.true,la=2)
data=da$x;time=da$t;status=da$I;be=be.in;bootstrap = TRUE
result = coxmm(data, time, status, be, convergence=1e-8, b=100, method = "NPro")
da$t
da$I
coxmm(data, time, status, be, convergence=1e-8, b=100, method = "NPro")
status
time
data
nrow(data)
boot_rows <- sample(nrow(data), nrow(data), replace = TRUE)
data[boot_rows, ]
data[boot_rows, ]
time[boot_rows, ]
document()
rm(list=ls())
sam=function(n,be,th,la){
q=length(be)
x=matrix(rnorm(n*q,-1,1),n,q)
u=runif(n)
t=-log(u)/(la*exp(x%*%be))
#t=(exp(-log(u)/exp(x%*%be))-1)/la
cen=3.7
I=1*(t<=cen)
t=pmin(t,cen)
return(list(x=x,I=I,t=t))
}
n=500;q=3
be.true=matrix(c(-0.5,1,2),ncol=1)
t.true=c(0.1,0.5)
LA.TRUE=2*t.true
be.in=be.true*0.5
da=sam(n,be=be.true,la=2)
data=da$x;time=da$t;status=da$I;be=be.in;bootstrap = TRUE
result = coxmm(data, time, status, be, convergence=1e-8, b=100, method = "NPro")
summary.cox(result)
setwd=("c:/code")
rm(list=ls())
setwd=("c:/code")
wd=read.csv("12.csv")
wd=read.csv("12.csv")
read.csv("12.csv")
setwd("c:/code")
wd = read.csv("12.csv")
wd
wd[X1]
wd[1]
wd[[1]]
wd[[1:25]]
wd[[1,25]]
wd[2,]
wd[,2]
wd[,2:4]
as.matrix(wd[,1:25])
wd[time]
wd[,time]
wd[,"time"]
X = as.matrix(wd[,1:25])
time = wd[,"time"]
status = wd[,"status"]
rep(1,25)
data=X;be=matrix(rep(1,25),ncol=1);bootstrap = TRUE
coxmm(data, time, status, be, convergence=1e-8, b=100, method = "Pro")
data
rm(list=ls())
sam=function(n,be,th,la){
q=length(be)
x=matrix(rnorm(n*q,-1,1),n,q)
u=runif(n)
t=-log(u)/(la*exp(x%*%be))
#t=(exp(-log(u)/exp(x%*%be))-1)/la
cen=3.7
I=1*(t<=cen)
t=pmin(t,cen)
return(list(x=x,I=I,t=t))
}
n=500;q=3
be.true=matrix(c(-0.5,1,2),ncol=1)
t.true=c(0.1,0.5)
LA.TRUE=2*t.true
be.in=be.true*0.5
da=sam(n,be=be.true,la=2)
data=da$x;time=da$t;status=da$I;be=be.in;bootstrap = TRUE
data
rm(list=ls())
wd = read.csv("12.csv")
X = as.matrix(wd[,1:25])
time = wd[,"time"]
status = wd[,"status"]
data=X;be=matrix(rep(0,25),ncol=1);bootstrap = TRUE
coxmm(data, time, status, be, convergence=1e-8, b=100, method = "Pro")
be=matrix(rep(0.5,25),ncol=1)
coxmm(data, time, status, be, convergence=1e-8, b=100, method = "Pro")
rm(list=ls())
sam=function(n,be,th,la){
q=length(be)
x=matrix(rnorm(n*q,-1,1),n,q)
u=runif(n)
t=-log(u)/(la*exp(x%*%be))
#t=(exp(-log(u)/exp(x%*%be))-1)/la
cen=3.7
I=1*(t<=cen)
t=pmin(t,cen)
return(list(x=x,I=I,t=t))
}
n=500;q=3
be.true=matrix(c(-0.5,1,2),ncol=1)
t.true=c(0.1,0.5)
LA.TRUE=2*t.true
be.in=be.true*0.5
da=sam(n,be=be.true,la=2)
data=da$x;time=da$t;status=da$I;be=be.in;bootstrap = TRUE
time
status
as.matrix(wd[,"time"])
rm(list=ls())
wd = read.csv("12.csv")
X = as.matrix(wd[,1:25])
time = as.matrix(wd[,"time"])
status = as.matrix(wd[,"status"])
status
data=X;be=matrix(rep(0.5,25),ncol=1);bootstrap = TRUE
coxmm(data, time, status, be, convergence=1e-8, b=100, method = "Pro")
x=data; t=time; I=status
n=dim(x)[1]
q=dim(x)[2]
n
q
LA=vector(length=n)
for(i in 1:n){
LA[i]=sum(la*(t<=t[i]))
}
la=rep(1/n,n)
LA=vector(length=n)
for(i in 1:n){
LA[i]=sum(la*(t<=t[i]))
}
AE=exp(x%*%be)
newla=vector(length=n)
for(i in 1:n){
newla[i]=I[i]/sum(AE*(t>=t[i]))
}
b=LA*exp(x%*%be)
de=abs(x)/matrix(apply(abs(x),1,sum),n,q)
newbe=vector(length=q)
for(p in 1:q){
f1=sum(I*x[,p]-x[,p]*b)
f2=-sum(2*x[,p]*x[,p]*b/de[,p])
newbe[p]=be[p]-f1/f2
}
a1=(la*exp(x%*%be))^I
a2=LA*exp(x%*%be)
lfun=sum(log(a1)-a2)
newLA=vector(length=n)
for(i in 1:n){
newLA[i]=sum(newla*(t<=t[i]))
}
a1=(newla*exp(x%*%newbe))^I
a2=newLA*exp(x%*%newbe)
newlfun=sum(log(a1)-a2)
eps=abs(newlfun-lfun)/(abs(lfun)+1)
list(newbe=newbe, newla=newla, newLA=newLA, eps=eps)
LA*exp(x%*%be)
x
be=matrix(rep(5,25),ncol=1)
coxmm(data, time, status, be, convergence=1e-8, b=100, method = "Pro")
la
LA
exp(x%*%be)
x%*%be
wd[30,17]
wd[30,17]=0.8876
wd[30,17]
coxmm(data, time, status, be, convergence=1e-8, b=100, method = "Pro")
rm(list=ls())
wd = read.csv("12.csv")
wd[30,17]=0.8876
X = as.matrix(wd[,1:25])
time = as.matrix(wd[,"time"])
status = as.matrix(wd[,"status"])
data=X;be=matrix(rep(5,25),ncol=1);bootstrap = TRUE
coxmm(data, time, status, be, convergence=1e-8, b=100, method = "Pro")
data[30,17]
x=data; t=time; I=status
n=dim(x)[1]
q=dim(x)[2]
la=rep(1/n,n)
LA=vector(length=n)
LA
for(i in 1:n){
LA[i]=sum(la*(t<=t[i]))
}
LA
AE=exp(x%*%be)
AE
x%*%be
rm(list=ls())
wd = read.csv("12.csv")
wd[30,17]=0.8876
X = as.matrix(wd[,1:24])
time = as.matrix(wd[,"time"])
status = as.matrix(wd[,"status"])
data=X;be=matrix(rep(5,25),ncol=1);bootstrap = TRUE
coxmm(data, time, status, be, convergence=1e-8, b=100, method = "Pro")
rm(list=ls())
wd = read.csv("12.csv")
wd[30,17]=0.8876
X = as.matrix(wd[,1:24])
time = as.matrix(wd[,"time"])
status = as.matrix(wd[,"status"])
data=X;be=matrix(rep(1,24),ncol=1);bootstrap = TRUE
coxmm(data, time, status, be, convergence=1e-8, b=100, method = "Pro")
x=data; t=time; I=status
n=dim(x)[1]
q=dim(x)[2]
# compute LA
la=rep(1/n,n)
LA=vector(length=n)
for(i in 1:n){
LA[i]=sum(la*(t<=t[i]))
}
AE=exp(x%*%be)
newla=vector(length=n)
for(i in 1:n){
newla[i]=I[i]/sum(AE*(t>=t[i]))
}
LA*exp(x%*%be)
x
be
x%*%be
library(devtools)
load_all()
sam=function(n,be,th,la){
q=length(be)
x=matrix(rnorm(n*q,-1,1),n,q)
u=runif(n)
t=-log(u)/(la*exp(x%*%be))
#t=(exp(-log(u)/exp(x%*%be))-1)/la
cen=3.7
I=1*(t<=cen)
t=pmin(t,cen)
return(list(x=x,I=I,t=t))
}
n=500;q=3
be.true=matrix(c(-0.5,1,2),ncol=1)
t.true=c(0.1,0.5)
LA.TRUE=2*t.true
be.in=be.true*0.5
da=sam(n,be=be.true,la=2)
data=da$x;time=da$t;status=da$I;be=be.in;bootstrap = TRUE
result = coxmm(data, time, status, be, convergence=1e-8, b=1000, method = "Pro")
summary.cox(result)
result = coxmm(data, time, status, be, convergence=1e-8, b=2000, method = "Pro")
summary.cox(result)
library(devtools)
load_all()
rm(list=ls())
sam=function(n,be,th,la){
q=length(be)
x=matrix(rnorm(n*q,-1,1),n,q)
u=runif(n)
t=-log(u)/(la*exp(x%*%be))
#t=(exp(-log(u)/exp(x%*%be))-1)/la
cen=3.7
I=1*(t<=cen)
t=pmin(t,cen)
return(list(x=x,I=I,t=t))
}
n=200;q=3
be.true=matrix(c(-0.5,1,2),ncol=1)
t.true=c(0.1,0.5)
LA.TRUE=2*t.true
be.in=be.true*0.5
da=sam(n,be=be.true,la=2)
data=da$x;time=da$t;status=da$I;be=be.in;bootstrap = TRUE
result = coxmm(data, time, status, be, convergence=1e-6, b=1000, method = "Pro")
summary.cox(result)
